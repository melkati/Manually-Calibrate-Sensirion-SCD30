name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  get_default_envs:
    name: Gather Environments
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
                    ${{ runner.os }}-pip-
    - uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: pip install -r requirements.txt
    - name: Get default environments
      id: envs
      run: |
                echo "::set-output name=environments::$(pio project config --json-output | jq -cr '.[0][1][0][1]')"
    outputs:
      environments: ${{ steps.envs.outputs.environments }}
      
  build:
    name: Build Enviornments
    runs-on: ubuntu-latest
    needs: get_default_envs
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]
        environment: ${{ fromJSON(needs.get_default_envs.outputs.environments) }}
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U platformio
          platformio update
      - name: Build test
        run: |
          pio run -e ${{ matrix.environment }}
      - uses: actions/upload-artifact@v2
        with:
          name: firmware-${{ matrix.environment }}
          path: |
            .pio/build/esp32dev/*.bin
            .pio/build/esp32dev/*.gz
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1        
        with:          
          files:
            .pio/build/*/*.bin
          draft: True
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
